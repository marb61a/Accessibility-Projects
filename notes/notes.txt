Intro to Web Accessibility
    - Accessibility is often abbreviated to A11y, or Ally
    - The 11 in the middle represents the number of characters between the letters A and Y

What is Accessibility
    - Accessibility is the practice of making a product that is usable by everyone, with or without disabilities
    - Accessibility is often confused with Usability but the main difference is that accessibility is focused more on people with disabilities
    - A product that's designed, developed, and tested with accessibility in mind will have more users than a product that is not accessible
    - There is more pressure on businesses to make applications accessible
    - Websites and mobile apps should be designed with accessibility in mind
    - Accessibility issues can cost loss of users, which in turn, loss of money to the business

Web Content Accessibility Guidelines 2.0
    - The World Wide Web Consortium has come up with the Web Content Accessibility Guidelines
        - This provides a list of guidelines and recommendations on how to make your website more accessible
    - Version 2.0, which was published on December 2008, contains a set of rules which were grouped under four categories - perceivable, operable, understandable, and robust
        - This is abbreviated to the acronym POUR
        - Perceivable
            - Perceivable means that the information should be presented to your users in different means
            - Some users may have sense difficulties eg visual impairment which makes them reliant on assistive technology eg Screen Readers
        - Operable
            - Operable refers to the principle that your users must be able to operate your website by using different means
            - Some users may have motor skills difficulties which means that they may struggle using a mouse and will need to use a keyboard
        - Understandable
            - Understandable means making sure that users can understand the information presented to them when using your website
            - Clear instructions should be provided as well as clear error messages to allow for understanding and fixing mistakes 
        - Robust
            - Robust refers to making sure that your website must be used by your users when they use third-party assistive technologies, even if the technology advances
            - This can be done by enforcing and adhering to standards eg HTML structure
    - In June 2018, version 2.1 was published to cover mobile accessibility, people with low vision and cognitive and learning abilities
        - It's an extension to version 2.0, so other things guidelines from 2.0 will also apply in 2.1
        - With this version there is a need for a website to be accessible in both portrait and landscape mode
        - If for instance there are animations present on a site they should be able to be turned off
        - There is also a need for being able to zoom or enlarge text for people with visual issues

WCAG 2.1 Conformance Levels
    - Within the Web Content Accessibility Guidelines, each of the guidelines under 2.0 and 2.1 have a success criteria
    - This is defined through the three conformance levels that businesses or companies should conform to
        - Level A is the most basic conformance and through each level A, you must achieve 25 criteria from the accessibility guidelines
        - Level AA is mid range and through each level AA, apart from achieving 25 criteria from level A, you also need to achieve 13 new criteria on this level
        - Level AAA is the final and highest level meaning that you need to achieve the previous two levels, as well as another 23 criteria on top
    - As a starting point, it's a great start to make your website conform to level A, and then work your way through level AA to include more users
        - It is not manditory to reach AAA as this is targeted to specialist Websites
        - The recommended level is level AA, and this is the level that most teams are aiming to meet

Why Accessibility Testing is Important
    - Accessibility testing is the right thing to do
        - This is true of both individuals and society
        - Empathy will allow for better understanding of issues faced by people and will lead to improved products
    - Better accessibility means better user experience
        - Poor accessibility will usually lead to poor User Experience (UX) for some users
        - Oftentimes, accessibility testing is often seen as an afterthought, only after a product has been deployed to production
        - Good functionality does not mean good accessibility
    - Better accessibility also means that you widen your reach to other audiences
        - Try to have products that reach people with disabilities this benefits both customers and businesses
        - he law on accessibility differs from one country to another, so it’s best to check the regulations in a country first

 How can automated accessibility tests help us
    - Automating some tests makes sense given the amount of different accessibility checks that we need to do
        - By automating some of the accessibility tests basic accessibility issues can be caught earlier on in the development process
        - This can also serve as a living documentation to your team
    - Another benefit is it will prevent any regression issues related to accessibility from being deployed to production
        - By having automated tests in place it prevents fixed issues being redeployed to production
    - Automating tests frees up your time to do more complex testing activities
        - Automated accessibility tests will only catch a subset of the accessibility issues  that can occur
        - It is still beneficial to have them because it will help us speed up our testing process and they are cheap to run
    - Having automated accessibility tests provides a fast feedback loop to your design and development team
        - This is especially true if the tests are running as part of your continuous integration pipeline
        - The development team will know in an instant if the feature that they are working on has broken any accessibility rules

The importance of doing accessibility testing with actual users
    - Nothing beats actual accessibility testing with real users
    - Automating tests is good but there’s still a lot of benefit to gain if you invite real users with disabilities to test your website
    - The reason being is that they probably use different third party assistive technologies
        - This way there is first hand understanding on how a product is used day to day 
    - It may be a good idea to get them involved when your team is designing and developing a new feature
    - Doing accessibility testing with real users as well as doing an evaluation checklist
        - This can be achieved with having automated accessibility tests and checking it
        - It the best approach to ensuring that a site or app is accessible to users with different disabilities
    - Diving into accessibility testing can be challenging

Web Accessibility Test checks
    - Doing accessibility testing can be overwhelming, especially if it has not been done before
    - There are a lot of guidelines available to help get started
    - World Wide Web Consortium or W3C has created the web accessibility initiative which contains resources to help make a website or app more accessible
        - https://www.w3.org/WAI/
        - They provide Easy Checks to help get started
        - https://www.w3.org/WAI/test-evaluate/preliminary/

Checks That Can Be Automated
    - There are different accessibility rules that can be covered by an automated tool
    - Detecting if a page doesn't have a page title
        - Page title is important because this is the first thing that the screen reader says when a user visits your page
        - Without a page title can cause confusion with multiple tabs open
    - Another check that can be automated is image text alternatives
        - An automated accessibility testing tool can check if images have the alt text attribute
        - Users with visual impairments rely on alt texts to help them understand images that they may not be able to see
    - More checks that can be automated are ensuring correct heading structure and if there are any missing heading elements
        - It is a recommendation that a page have at least 1 heading
        - Having a good heading structure helps out on how your page will be accessed using keyboard only
    - A similar check to previous is checking colour contrast
        - An accessibility tool can help detect colour contrast issues and can report on these
        - This is very helpful for users with visual impairments who will have reading issues if there is not enough contrast between text and background
    - An automated tool can be used to detect errors in your HTML structure
        - This means checking for missing required elements or missing element attributes
    - An automated tool can also report issues related to missing ARIA labels that are required
        - The aria-label attribute is used as a label to elements where the label is not visible on the screen
        - This is particularly helpful for using screen readers

Checks That Need To Be Tested
    - Automated tools are there to help you detect if these attributes are present
    - However although a title attribute may be present it must make sense
    - There are similar rules for using image text alternatives
        - This attribute can be added but it has to make sense especially when it's being used by a screen reader
    - Heading structure should be tested with a keyboard to ensure that it makes sense
    - With the HTML structure, you still need to use your keyboard to test that the structure makes sense when accessing it with your keyboard only
    - With ARIA labels there should be a screen reader used to determine if the label name provided makes sense
        - This should give more meaning to the element being focused on
    - Human intervention is still very much needed if doing accessibility testing
    - If a site uses forms ensure that there is feedback provided whenever users submit the form or make mistakes
        - These messages should be very clear and easy to understand
    - Using embedded videos on a site means having clear subtitles that represent the video well
        - When using audio or video control of volume is very important 
    - When using animations there should be the user control so that they may turn them off if necessary
    - A keyboard will be needed to perform some checks
        - This makes it a very valuable tool in accessibility testing
    - Responsive site layouts are another tricky area
        - If a user is using a mobile device to access the site is the mobile version of the site showing

Tips on doing accessibility testing
    - There are a lot of checks to be done so have a plan in place
    - There are some tips to bear in mind
        - Decide within the team what Web Content Accessibility Guideline level you want to achieve
        - Get involved with the UX team and collaborate
        - Start testing on a basic page
        - Use the keyboard much more regularly
        - Try and experiment with screen readers

Tools Requiring Human Assistance
    - It is advisable to categorise tools into 3 different categories
        - Tools which require human assistance
        - Semi-automated tools in the form of browser extensions
        - Automated tools which you can add in your code base, and run as part of your CI pipeline

 Tools which require human assistance
    - The first testing tool when testing accessibility is the keyboard
    - Keyboard shortcuts are not only time savers but are very useful in testing
        - Windows accessibility shortcuts are available at the following url
            - https://support.microsoft.com/en-us/windows/windows-keyboard-shortcuts-for-accessibility-021bcb62-45c8-e4ef-1e4f-41b8c1fc87fd
        - Web accessibility shortcuts are available at
            - https://webaim.org/techniques/keyboard/accesskey
    - Try to navigate a favourite site using a keyboard and shortcuts

Screen Readers
    - A screen reader allows people with disabilities - specifically those who have visual impairments - to use a computer
    - It translates everything a user normally sees on their screen to speech
    - There are a lot of screen readers available including
        - VoiceOver -- Already installed on a MAC and just needs to be enabled
        - NVDA and JAWS are the two most popular screen readers out there for Windows
            - NVDA is a free tool, while JAWS is a commercial one
            - https://www.nvaccess.org/
            - https://www.freedomscientific.com/products/software/jaws/
        - The TalkBack screen reader is available on the Android platform
            - https://play.google.com/store/apps/details?id=com.google.android.marvin.talkback&hl=en_IE&gl=US
    - Screen readers demonstrate why it's important to use the correct heading structure, the correct labels, and descriptions
        - This is because the screen reader will read these aloud
        - An impact of not having alternative text is that the description will not make sense to people using screen readers
        - If users zoom on a site ensure that the elements are stacking up nicely, and not on top of one another

Semi Automated Accessibility Testing Tools
Axe
    - The axe browser extension is one tool that is based on the axe-core library
        - https://chrome.google.com/webstore/detail/axe-web-accessibility-tes/lhdoppojpmngadmnindnejefpokejbdd
    - Once installed, just right-click, click Inspect, and then click on the "axe" tab
        - Then, click on the Analyze button, and afterwards you are shown this accessibility report
    - Violations are grouped, and then it also shows the number of occurrences for each of the violations that have occurred

Wave
    - WAVE is similar to AXE as it is another free tool that you can use that lets you run accessibility checks with their Chrome and browser extensions
        - https://wave.webaim.org/extension/
    - When installed, right-click and then select WAVE
    - This also generates a report which shows a breakdown of accessibility errors
        - It also shows accessibility features, structural elements, and also includes how many ARIA labels the page has
        - You can also inspect color contrast issues within WAVE
        - For a color contrast rule to pass, normal text should have a ratio of at least 4.5:1 foreground to background ratio, and at least 3:1 for large text

Google Lighthouse
    - This is already built in to Chrome if using a newer version, it also includes accessibility checks
        - This accessibility feature actually axe-core as its engine
        - To run Lighthouse, just open up developer tools and then find the Lighthouse tab
        - A report can also be generated which gives these different scores and clicking on accessibility will redirect you to the accessibility section
        - Only a subset of issues can be automatically detected, so it encourages the importance of not relying on it entirely

Automated Accessibility Testing Tools
Axe-Core
    - Axe-Core is one of the most popular automated accessibility testing tools out there is Axe-Core
    - If there is a need to programmatically catch accessibility issues, then you can use different libraries that are based on Axe-Core
    - Axe-Core's philosophy is to empower developers, and also software testers, to think about accessibility by integrating automated tests as early on as possible
    - There are a lot of projects which are built on Axe-Core
    - Axe-Core can also integrate into your testing tools of choice, such as Jest for unit testing, Cypress, Selenium, with Java, C#, and Python, WebdriverIO, and even TestCafe
    - All previously mentioned tools are meant to assist human testers not replace them

Axe-Cli
    - This can quickly catch basic accessibility issues from an application
    - As a prerequisite, in order to install Axe-CLI, you need to have Node and NPM installed on your machine
    - To install use the following command
        - npm install -g axe-cli
        - This does not add an entry to the package.json file
    - To run from the command line
        - axe <url>
    - By default tests are ran on headless Chrome
        - It must be noted that although Axe may not find an issue it does not mean a site is fully accessible
    - To run tests on a browser
        - axe <url> --browser chrome
            - !!! Running on firefox may need additional software  
        - This may run into errors from popups related to cookies
    - Multiple URL's may be tested as long as they are separated by comma
    - Use the --disable flag to disable a parameter
    - Test results can also be output to a JSON file
        - axe <url> --browser chrome --save test-results.json

Setting Up Cypress
    - As a prerequisite, in order to install Cypress, you need to have Node and NPM installed 
    - To check node version use the following command
        - node -v
    - To create a new project directory from the command line
        - mkdir <project name> and then cd <project name> to go into that directory
    - To initialise npm in the project use the following command
        - npm init
        - Using the -y flag will accept defaults for questions that npm init would ask
    - To add packages use the following command
        - npm install <package> or npm i <package>
        - To install a specific version use the <package>@<number> command
        - Using -D or save-dev with npm will save the package entry to the devdependencies section of package.json
    - Use npx is a shortcut to execute a command
        - It may also work in situations where npm will not
    - Cypress comes built in with a predefined folder structure to get started right away
        - npx cypress open has to be ran to generate the cypress folder
        - node_modules\.bin\cypress open is the alternative

Cypress
    - cy.visit              --> Visits a page/application
    - cy.injectAxe          --> Inject the axe-core runtime, must be after visiting the test page
    - cy.checkA11y          --> Can also be cy.checkAccessibility and scans for any accessibility issues 
    
    